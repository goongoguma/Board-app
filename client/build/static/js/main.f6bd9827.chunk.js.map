{"version":3,"sources":["history.js","api/api.js","actions/index.js","components/boards/GoogleAuth.js","components/Header.js","components/boards/BoardList.js","components/boards/BoardForm.js","components/boards/BoardCreate.js","components/Modal.js","components/boards/BoardDelete.js","components/boards/BoardEdit.js","components/App.js","reducers/authReducer.js","reducers/index.js","reducers/boardReducer.js","index.js"],"names":["createHistory","axios","create","baseURL","createBoard","formValues","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","getState","userId","res","wrap","_context","prev","next","auth","api","post","objectSpread","sent","type","payload","data","history","push","stop","this","_x","_x2","apply","arguments","fetchBoard","id","_ref3","_callee3","_context3","get","concat","_x4","GoogleAuth","onAuthChange","isSignedIn","_this","props","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","renderGoogleButton","react_default","createElement","className","onClick","_this2","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","React","Component","connect","state","Header","Link","to","boards_GoogleAuth","BoardList","renderCreate","userSignedIn","style","textAlign","renderList","boards","map","board","key","renderAdmin","title","description","currentUserId","fetchBoards","console","log","values","_ref2","_callee2","_context2","_x3","BoardForm","renderInput","formProps","_formProps$input","input","value","onChange","error","meta","label","onSubmit","handleSubmit","Field","name","component","formWrapped","reduxForm","form","validate","errors","BoardCreate","boards_BoardForm","Modal","ReactDOM","createPortal","onDismiss","e","stopPropagation","content","actions","document","querySelector","BoardDelete","renderActions","Fragment","deleteBoard","match","params","components_Modal","renderContent","ownProps","_ref5","_callee5","_context5","delete","_x6","BoardEdit","formVal","editBoard","initialValues","_","pick","_ref4","_callee4","_context4","patch","_x5","App","Router","components_Header","Route","path","exact","INITIAL_STATE","combineReducers","length","undefined","action","formReducer","mapKeys","defineProperty","omit","store","createStore","reducers","applyMiddleware","reduxThunk","render","es","components_App"],"mappings":"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","file":"static/js/main.f6bd9827.chunk.js","sourcesContent":["import createHistory from \"history/createBrowserHistory\";\r\n\r\nexport default createHistory();\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \" http://localhost:3001\"\r\n});\r\n","import api from \"../api/api\";\r\nimport history from \"../history\";\r\n\r\nexport const signIn = userId => {\r\n  return {\r\n    type: \"SIGN_IN\",\r\n    payload: userId\r\n  };\r\n};\r\nexport const signOut = () => {\r\n  return {\r\n    type: \"SIGN_OUT\"\r\n  };\r\n};\r\n\r\nexport const createBoard = formValues => {\r\n  return async (dispatch, getState) => {\r\n    const { userId } = getState().auth;\r\n    const res = await api.post(\"/boards\", { ...formValues, userId });\r\n\r\n    dispatch({ type: \"CREATE_BOARD\", payload: res.data });\r\n    history.push(\"/\");\r\n  };\r\n};\r\n\r\nexport const fetchBoards = () => {\r\n  return async dispatch => {\r\n    const res = await api.get(\"/boards\");\r\n    dispatch({ type: \"FETCH_BOARDS\", payload: res.data });\r\n  };\r\n};\r\n\r\nexport const fetchBoard = id => {\r\n  return async dispatch => {\r\n    const res = await api.get(`/boards/${id}`);\r\n\r\n    dispatch({ type: \"FETCH_BOARD\", payload: res.data });\r\n  };\r\n};\r\n\r\nexport const editBoard = (id, formValues) => {\r\n  return async dispatch => {\r\n    const res = await api.patch(`/boards/${id}`, formValues);\r\n\r\n    dispatch({ type: \"EDIT_BOARD\", payload: res.data });\r\n    history.push(\"/\");\r\n  };\r\n};\r\n\r\nexport const deleteBoard = id => {\r\n  return async dispatch => {\r\n    await api.delete(`/boards/${id}`);\r\n\r\n    dispatch({ type: \"DELETE_BOARD\", payload: id });\r\n    history.push(\"/\");\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn, signOut } from \"../../actions\";\r\n\r\nclass GoogleAuth extends React.Component {\r\n  componentDidMount() {\r\n    window.gapi.load(\"client:auth2\", () => {\r\n      window.gapi.client\r\n        .init({\r\n          clientId:\r\n            \"333697948788-iq181q0b8j19djgd1l8k2dspoeepqlpp.apps.googleusercontent.com\",\r\n          scope: \"email\"\r\n        })\r\n        .then(() => {\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n          this.onAuthChange(this.auth.isSignedIn.get());\r\n          // listen takes boolean value\r\n          this.auth.isSignedIn.listen(this.onAuthChange);\r\n        });\r\n    });\r\n  }\r\n\r\n  onAuthChange = isSignedIn => {\r\n    if (isSignedIn) {\r\n      this.props.signIn(this.auth.currentUser.get().getId());\r\n    } else {\r\n      this.props.signOut();\r\n    }\r\n  };\r\n\r\n  onSignInClick = () => {\r\n    this.auth.signIn();\r\n  };\r\n\r\n  onSignOutClick = () => {\r\n    this.auth.signOut();\r\n  };\r\n\r\n  renderGoogleButton = () => {\r\n    if (this.props.isSignedIn === null) {\r\n      return \"loading...\";\r\n    } else if (!this.props.isSignedIn) {\r\n      return (\r\n        <button className=\"ui red google button\" onClick={this.onSignInClick}>\r\n          <i className=\"google icon\" />\r\n          Google Login\r\n        </button>\r\n      );\r\n    } else if (this.props.isSignedIn) {\r\n      return (\r\n        <button className=\"ui red google button\" onClick={this.onSignOutClick}>\r\n          <i className=\"google icon\" />\r\n          Google Logout\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <div className=\"right menu\">{this.renderGoogleButton()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isSignedIn: state.auth.isSignedIn\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { signIn, signOut }\r\n)(GoogleAuth);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GoogleAuth from \"./boards/GoogleAuth\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"ui secondary pointing menu\">\r\n      <Link to=\"/\" className=\"big ui button\">\r\n        Go back to main board\r\n      </Link>\r\n      <GoogleAuth />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchBoards } from \"../../actions\";\r\n\r\nclass BoardList extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchBoards();\r\n  }\r\n\r\n  renderCreate = () => {\r\n    if (this.props.userSignedIn) {\r\n      return (\r\n        <div style={{ textAlign: \"right\" }}>\r\n          <Link to=\"/boards/new\" className=\"ui button primary\">\r\n            Create Board\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  renderList = () => {\r\n    return this.props.boards.map(board => {\r\n      return (\r\n        <div className=\"item\" key={board.id}>\r\n          {this.renderAdmin(board)}\r\n          <div className=\"content\">\r\n            {board.title}\r\n            <div className=\"description\">{board.description}</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  renderAdmin = board => {\r\n    if (board.userId === this.props.currentUserId) {\r\n      return (\r\n        <div className=\"right floated content\">\r\n          <Link to={`/boards/edit/${board.id}`} className=\"ui button primary\">\r\n            EDIT\r\n          </Link>\r\n          <Link to={`boards/delete/${board.id}`} className=\"ui button negative\">\r\n            DELETE\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div>\r\n        <h2>Boards</h2>\r\n        <div className=\"ui celled list\">{this.renderList()}</div>\r\n        {this.renderCreate()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    boards: Object.values(state.boards),\r\n    currentUserId: state.auth.userId,\r\n    userSignedIn: state.auth.isSignedIn\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchBoards }\r\n)(BoardList);\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { createBoard } from \"../../actions/index\";\r\n\r\nclass BoardForm extends React.Component {\r\n  renderInput = formProps => {\r\n    const { value, onChange } = formProps.input;\r\n    const { error } = formProps.meta;\r\n    return (\r\n      <div className=\"field\">\r\n        <label>{formProps.label}</label>\r\n        <input value={value} onChange={onChange} />\r\n        <div>{error}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  onSubmit = formValues => {\r\n    this.props.onSubmit(formValues);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className=\"ui form\"\r\n        onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n      >\r\n        <Field\r\n          name=\"title\"\r\n          component={this.renderInput}\r\n          label={\"Enter Title\"}\r\n        />\r\n        <Field\r\n          name=\"description\"\r\n          component={this.renderInput}\r\n          label={\"Enter Description\"}\r\n        />\r\n        <button className=\"ui button\">Submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = formValues => {\r\n  const errors = {};\r\n  if (!formValues.title) {\r\n    errors.title = \"You must enter a title\";\r\n  } else if (!formValues.description) {\r\n    errors.description = \"You must enter a description\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst formWrapped = reduxForm({ form: \"boardCreate\", validate })(BoardForm);\r\n\r\nexport default connect(\r\n  null,\r\n  { createBoard }\r\n)(formWrapped);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createBoard } from \"../../actions/index\";\r\nimport BoardForm from \"../boards/BoardForm\";\r\n\r\nclass BoardCreate extends React.Component {\r\n  onSubmit = formValues => {\r\n    this.props.createBoard(formValues);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Create a Board</h3>\r\n        <BoardForm onSubmit={this.onSubmit} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { createBoard }\r\n)(BoardCreate);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Modal = props => {\r\n  return ReactDOM.createPortal(\r\n    <div onClick={props.onDismiss} className=\"ui dimmer modals visible active\">\r\n      <div\r\n        onClick={e => e.stopPropagation()}\r\n        className=\"ui standard modal visible active\"\r\n      >\r\n        <div className=\"header\">{props.title}</div>\r\n        <div className=\"content\">{props.content}</div>\r\n        <div className=\"actions\">{props.actions}</div>\r\n      </div>\r\n    </div>,\r\n    document.querySelector(\"#modal\")\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport Modal from \"../Modal\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport history from \"../../history\";\r\nimport { fetchBoard, deleteBoard } from \"../../actions\";\r\n\r\nclass BoardDelete extends React.Component {\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n    this.props.fetchBoard(this.props.match.params.id);\r\n  }\r\n\r\n  renderActions = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <button\r\n          onClick={() => this.props.deleteBoard(this.props.match.params.id)}\r\n          className=\"ui button negative\"\r\n        >\r\n          Delete\r\n        </button>\r\n        <Link to=\"/\" className=\"ui button\">\r\n          Cancel\r\n        </Link>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  renderContent() {\r\n    if (!this.props.board) {\r\n      return \"Are you sure you want to delete this board?\";\r\n    }\r\n    return `Are you sure you want to delete the stream with title : ${\r\n      this.props.board.title\r\n    }`;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        title=\"Delete Modal\"\r\n        content={this.renderContent()}\r\n        actions={this.renderActions()}\r\n        onDismiss={() => history.push(\"/\")}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  console.log(state);\r\n  return {\r\n    board: state.boards[ownProps.match.params.id]\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchBoard, deleteBoard }\r\n)(BoardDelete);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchBoard, editBoard } from \"../../actions\";\r\nimport _ from \"lodash\";\r\nimport BoardForm from \"./BoardForm\";\r\n\r\nclass BoardEdit extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchBoard(this.props.match.params.id);\r\n  }\r\n\r\n  onSubmit = formVal => {\r\n    console.log(this.props.match.params.id);\r\n    this.props.editBoard(this.props.match.params.id, formVal);\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    if (!this.props.board) {\r\n      return <div>LOADING...</div>;\r\n    }\r\n    return (\r\n      <div>\r\n        <h3>Edit a Board</h3>\r\n        <BoardForm\r\n          initialValues={_.pick(this.props.board, \"title\", \"description\")}\r\n          onSubmit={this.onSubmit}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    board: state.boards[ownProps.match.params.id]\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchBoard, editBoard }\r\n)(BoardEdit);\r\n","import React from \"react\";\r\nimport { Router, Route } from \"react-router-dom\";\r\nimport history from \"../history\";\r\nimport Header from \"./Header\";\r\nimport BoardList from \"./boards/BoardList\";\r\nimport BoardCreate from \"./boards/BoardCreate\";\r\nimport BoardDelete from \"./boards/BoardDelete\";\r\nimport BoardEdit from \"./boards/BoardEdit\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router history={history}>\r\n      <div>\r\n        <Header />\r\n        <Route path=\"/\" exact component={BoardList} />\r\n        <Route path=\"/boards/new\" component={BoardCreate} />\r\n        <Route path=\"/boards/edit/:id\" component={BoardEdit} />\r\n        <Route path=\"/boards/delete/:id\" component={BoardDelete} />\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const INITIAL_STATE = {\r\n  isSignedIn: null\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SIGN_IN\":\r\n      return { ...state, isSignedIn: true, userId: action.payload };\r\n    case \"SIGN_OUT\":\r\n      return { ...state, isSignedIn: false, userId: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport boardReducer from \"./boardReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  boards: boardReducer\r\n});\r\n","import _ from \"lodash\";\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_BOARDS\":\r\n      return { ...state, ..._.mapKeys(action.payload, \"id\") };\r\n    case \"FETCH_BOARD\":\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case \"CREATE_BOARD\":\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case \"EDIT_BOARD\":\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case \"DELETE_BOARD\":\r\n      return _.omit(state, action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// )\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport reducers from \"./reducers\";\r\nimport { applyMiddleware } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\n\r\nconst store = createStore(reducers, applyMiddleware(reduxThunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}